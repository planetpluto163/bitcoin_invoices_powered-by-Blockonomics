'"""
Cryptographic functions to encrypt/decrypt data like CryptoJS
Adapted from
http://stackoverflow.com/questions/36762098/how-to-decrypt-password-from-javascript-cryptojs-aes-encryptpassword-passphras
"""\nfrom Crypto import Random\nfrom Crypto.Cipher import AES\nimport base64\nimport string\nimport random\nfrom hashlib import md5\n\nBLOCK_SIZE = 16\n\ndef pad(data):\n    length = BLOCK_SIZE - (len(data) % BLOCK_SIZE)\n    return data + (chr(length)*length).encode()\n\ndef unpad(data):\n    return data[:-(data[-1] if type(data[-1]) == int else ord(data[-1]))]\n\ndef bytes_to_key(data, salt, output=48):\n    # extended from https://gist.github.com/gsakkis/4546068\n    assert len(salt) == 8, len(salt)\n    data += salt\n    key = md5(data).digest()\n    final_key = key\n    while len(final_key) < output:\n        key = md5(key + data).digest()\n        final_key += key\n    return final_key[:output]\n\ndef encrypt(message, passphrase):\n    salt = Random.new().read(8)\n    key_iv = bytes_to_key(passphrase, salt, 32+16)\n    key = key_iv[:32]\n    iv = key_iv[32:]\n    aes = AES.new(key, AES.MODE_CBC, iv)\n    aes = AES.new(key, AES.MODE_CBC, iv)\n    return base64.b64encode(b"Salted__" + salt + aes.encrypt(pad(message)))\n\ndef decrypt(encrypted, passphrase):\n    encrypted = base64.b64decode(encrypted)\n    assert encrypted[0:8] == b"Salted__"\n    salt = encrypted[8:16]\n    key_iv = bytes_to_key(passphrase, salt, 32+16)\n    key = key_iv[:32]\n    iv = key_iv[32:]\n    aes = AES.new(key, AES.MODE_CBC, iv)\n    return unpad(aes.decrypt(encrypted[16:]))\n\ndef generate_passphrase(length):\n  chars = string.letters + string.digits\n  return ''.join(random.choice(chars) for _ in range(length))\n\nif __name__ == "__main__":\n  passphrase = generate_passphrase(8)\n  pt = b'Hi Blockonomics!'\n  ct = encrypt(pt, passphrase)\n  decrypted_ct = decrypt(ct, passphrase)\n  print("Plain text: " + pt)\n  print("Cipher text: " + ct.encode('hex'))\n  assert decrypted_ct == pt\n\n  #print("pt", decrypt(encrypt(pt, password), password))